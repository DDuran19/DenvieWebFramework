def base(to: int = 15):
    """
    Generates a CSS file with a base template for a custom CSS framework.

    Args:
        to (int): The maximum value for generating row and column classes. Defaults to 15.

    Description:
        This function generates a CSS file called "grids.css" with a base template for a custom CSS framework.
        The generated CSS file contains classes for defining rows, columns, and row/column spans in a grid layout.

        To use the generated CSS file, you can apply the following classes:
        - For rows: Use the class "row-" followed by the number of the row.
        - For columns: Use the class "col-" followed by the number of the column.
        - For row spans: Use the class "row-x-y" where x is the starting row and y is the ending row.
        - For column spans: Use the class "column-x-y" where x is the starting column and y is the ending column.

    Example:
        To create a grid layout with a row span from row 2 to row 4 and a column span from column 1 to column 3,
        you can apply the classes as follows:

        - For the row span: Apply the class "row-2-4" to the respective HTML element.
        - For the column span: Apply the class "column-1-3" to the respective HTML element.

        This will define a spanning area from row 2 to row 4 and from column 1 to column 3 in the grid layout.

    """
    template = """
/* This css file is automatically generated by autogrid.py written by DDuran19. 
Checkout my github repo here: https://github.com/DDuran19/DenvieWebFramework.
For Suggestions, send an email here: denverjames.duran19@outlook.com

Ultimate goal is to create my own web framework :)

To use:
- Parent: Apply the class "grid-container" to make the element have the display: grid-container as a style.
    HTML: <div class="grid-container"> </div>

- Rows: Apply the class "row-" followed by the number of the row. For example, ".row-2" for the 2nd row.
    HTML: <div class="row-2">I'm in row 2!</div>

- Columns: Apply the class "col-" followed by the number of the column. For example, "col-3" for the 4th column.
    HTML: <div class="col-3">I'm in 3rd column!</div>

- Row Spans: Apply the class "row-x-y" where x is the starting row and y is the ending row. For example, "row-2-4"
  creates a spanning area from row 2 to row 4.
    HTML: <div class="row-2-4">I start on row 2 and will span up to row 4!</div>

- Column Spans: Apply the class "column-x-y" where x is the starting column and y is the ending column.
  For example, "column-1-3" creates a spanning area from column 1 to column 3.
    HTML: <div class="column-1-3">I start on column 1 and will span up to column 3!</div>

*/

:root {
    --debug: 2px solid black;
}

.grid-container {
  display: grid;
}
"""
    with open("grids.css", "w") as file:
        file.write(template)


def rowsAndCols(to: int = 15):
    """
    Generates row and column classes in a CSS file.

    Args:
        to (int): The maximum value for generating row and column classes. Defaults to 15.

    Description:
        This function appends row and column classes to the existing "grids.css" file.
        It generates classes for rows and columns ranging from 1 to the specified maximum value.

    Example:
        If the maximum value is set to 15, this function will generate classes for rows: ".row-1" to ".row-15"
        and classes for columns: ".col-1" to ".col-15".

        To use the generated row and column classes, apply the respective classes to the HTML elements
        to define their positioning within the grid layout.

    """
    with open("grids.css", "a") as file:
        file.write("\n/* Rows and Columns */\n\n")
        for i in range(to):
            if i==0: continue
            rowTemplate = f'.row-{i} {{ grid-row: {i}; }}\n'
            colTemplate = f'.col-{i} {{ grid-column: {i}; }}\n'
            file.write(rowTemplate)
            file.write(colTemplate)


def rowAndColSpans(to: int = 15):
    """
    Generates row and column span classes in a CSS file.

    Args:
        to (int): The maximum value for generating row and column classes. Defaults to 15.

    Description:
        This function appends row and column span classes to the existing "grids.css" file.
        It generates classes for row and column spans, defining spanning areas in the grid layout.

        The generated row span classes follow the format "row-x-y" where x is the starting row and y is the ending row.
        The generated column span classes follow the format "column-x-y" where x is the starting column and y is the ending column.

        Note that row and column spans are defined for distinct pairs where the starting row is less than the ending row.

    Example:
        If the maximum value is set to 15, this function will generate classes for row spans:
        ".row-1-2" to ".row-1-14", ".row-1-2" to ".row-1-14", and so on.

        It will also generate classes for column spans:
        ".column-1-2" to ".column-1-14", ".column-1-2" to ".column-1-14", and so on.

        To use the generated row and column span classes, apply the respective classes to the HTML elements
        to define their spanning areas within the grid layout.

    """
    with open("grids.css", "a") as file:
        file.write("\n/* Row Spans and Column Spans */\n\n")
        for i in range(to):
            if i==0: continue
            for j in range(to):
                if j==0: continue
                if i >= j:
                    continue
                rowspanTemplate = f'.row-{i}-{j} {{ grid-row: {i}/{j}; }}\n'
                colspanTemplate = f'.col-{i}-{j} {{ grid-column: {i}/{j}; }}\n'
                file.write(rowspanTemplate)
                file.write(colspanTemplate)


if __name__ == "__main__":
    base()
    rowsAndCols()
    rowAndColSpans()
